<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>日志使用</title>
      <link href="/2024/07/03/ri-zhi-shi-yong/"/>
      <url>/2024/07/03/ri-zhi-shi-yong/</url>
      
        <content type="html"><![CDATA[<h2 id="log4j"><a href="#log4j" class="headerlink" title="log4j"></a>log4j</h2><h3 id="maven-依赖"><a href="#maven-依赖" class="headerlink" title="maven 依赖"></a>maven 依赖</h3><pre class=" language-java"><code class="language-java">         <span class="token operator">&lt;</span>dependency<span class="token operator">></span>            <span class="token operator">&lt;</span>groupId<span class="token operator">></span>log4j<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>            <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>log4j<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>            <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">1.2</span><span class="token punctuation">.</span><span class="token number">17</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span></code></pre><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><pre><code># This is the configuring for logging displayed in the Application Serverlog4j.rootLogger=DEBUG,stdout#stdout configurelog4j.appender.stdout=org.apache.log4j.ConsoleAppenderlog4j.appender.stdout.layout=org.apache.log4j.PatternLayoutlog4j.appender.stdout.layout.ConversionPattern= %d %p [%c] - &lt;%m&gt;%n#logfile configurelog4j.appender.logfile=org.apache.log4j.DailyRollingFileAppenderlog4j.appender.logfile.File=logs/log.loglog4j.appender.logfile.layout=org.apache.log4j.PatternLayoutlog4j.appender.logfile.DatePattern = &#39;.&#39;yyyy-MM-ddlog4j.appender.logfile.layout.ConversionPattern= %d %p [%c] - &lt;%m&gt;%nlog4j.logger.com.inspur.interfaces.task=INFO,info,error,warn,stdoutlog4j.additivity.com.inspur.interfaces.task=falselog4j.appender.info=org.apache.log4j.DailyRollingFileAppenderlog4j.appender.info.Threshold=INFO#log4j.appender.info.Append=falselog4j.appender.info.File=logs/info.loglog4j.appender.info.layout=org.apache.log4j.PatternLayoutlog4j.appender.info.DatePattern = &#39;.&#39;yyyy-MM-ddlog4j.appender.info.layout.ConversionPattern= %d %p [%c] - &lt;%m&gt;%nlog4j.appender.info.filter.infoFilter = org.apache.log4j.varia.LevelRangeFilterlog4j.appender.info.filter.infoFilter.LevelMin = INFOlog4j.appender.info.filter.infoFilter.LevelMax = INFOlog4j.appender.warn=org.apache.log4j.DailyRollingFileAppenderlog4j.appender.warn.Threshold=WARN#log4j.appender.warn.Append=falselog4j.appender.warn.File=logs/result.loglog4j.appender.warn.layout=org.apache.log4j.PatternLayoutlog4j.appender.warn.DatePattern = &#39;.&#39;yyyy-MM-ddlog4j.appender.warn.layout.ConversionPattern= %d %p [%c] - &lt;%m&gt;%nlog4j.appender.warn.filter.infoFilter = org.apache.log4j.varia.LevelRangeFilterlog4j.appender.warn.filter.infoFilter.LevelMin = WARNlog4j.appender.warn.filter.infoFilter.LevelMax = WARNlog4j.appender.error=org.apache.log4j.DailyRollingFileAppenderlog4j.appender.error.Threshold=ERROR#log4j.appender.error.Append=falselog4j.appender.error.File=logs/error.loglog4j.appender.error.layout=org.apache.log4j.PatternLayoutlog4j.appender.error.DatePattern = &#39;.&#39;yyyy-MM-ddlog4j.appender.error.layout.ConversionPattern= %d %p [%c] - &lt;%m&gt;%n</code></pre><h2 id="logback"><a href="#logback" class="headerlink" title="logback"></a>logback</h2><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://blog.csdn.net/zbajie001/article/details/79596109">logback和log4j比较，前者是后者改良，logback配置详解</a></p><p><a href="http://www.51gjie.com/javaweb/1107.html">logback</a></p><h3 id="maven"><a href="#maven" class="headerlink" title="maven"></a>maven</h3><pre class=" language-java"><code class="language-java">一般springboot自带依赖<span class="token operator">&lt;</span>dependency<span class="token operator">></span>  <span class="token operator">&lt;</span>groupId<span class="token operator">></span>org<span class="token punctuation">.</span>slf4j<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>  <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>slf4j<span class="token operator">-</span>api<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>  <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">1.7</span><span class="token punctuation">.</span><span class="token number">21</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span><span class="token operator">&lt;</span>dependency<span class="token operator">></span>  <span class="token operator">&lt;</span>groupId<span class="token operator">></span>ch<span class="token punctuation">.</span>qos<span class="token punctuation">.</span>logback<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>  <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>logback<span class="token operator">-</span>core<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>  <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">1.1</span><span class="token punctuation">.</span><span class="token number">7</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span><span class="token operator">&lt;</span>dependency<span class="token operator">></span>  <span class="token operator">&lt;</span>groupId<span class="token operator">></span>ch<span class="token punctuation">.</span>qos<span class="token punctuation">.</span>logback<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>  <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>logback<span class="token operator">-</span>classic<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>  <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">1.1</span><span class="token punctuation">.</span><span class="token number">7</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span></code></pre><h3 id="配置文件-1"><a href="#配置文件-1" class="headerlink" title="配置文件"></a>配置文件</h3><pre class=" language-java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">?</span>xml version<span class="token operator">=</span><span class="token string">"1.0"</span> encoding<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">?</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> scan属性未<span class="token boolean">true</span>时，如果配置文档发生改变将会进行重新加载 <span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> scanPeriod属性设置监测配置文件修改的时间间隔，默认单位为毫秒，在scan为<span class="token boolean">true</span>时才生效 <span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> debug属性如果为<span class="token boolean">true</span>时，会打印出logback内部的日志信息 <span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>configuration scan<span class="token operator">=</span><span class="token string">"true"</span> scanPeriod<span class="token operator">=</span><span class="token string">"60 seconds"</span> debug<span class="token operator">=</span><span class="token string">"false"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>string name<span class="token operator">=</span><span class="token string">"123"</span><span class="token operator">></span>你好<span class="token operator">&lt;</span><span class="token operator">/</span>string<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 定义参数常量 <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 日志级别：TRACE<span class="token operator">&lt;</span>DEBUG<span class="token operator">&lt;</span>INFO<span class="token operator">&lt;</span>WARN<span class="token operator">&lt;</span>ERROR，其中常用的是DEBUG、INFO和ERROR <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"log.level"</span> value<span class="token operator">=</span><span class="token string">"debug"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 文件保留时间 <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"log.maxHistory"</span> value<span class="token operator">=</span><span class="token string">"30"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 日志存储路径 <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"log.filePath"</span> value<span class="token operator">=</span><span class="token string">"logs/logback"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 日志的显式格式 <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"log.pattern"</span>              value<span class="token operator">=</span><span class="token string">"%d&amp;#123;yyyy-MM-dd HH:mm:ss.SSS&amp;#125; [%thread] %-5level %logger[%file : %line]-%msg%n"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>property<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>    <span class="token operator">%</span>d <span class="token punctuation">[</span><span class="token operator">%</span>thread<span class="token punctuation">]</span> <span class="token operator">%</span><span class="token operator">-</span>5level <span class="token operator">%</span>logger<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token number">36</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token punctuation">[</span><span class="token operator">%</span>file <span class="token operator">:</span> <span class="token operator">%</span>line<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token operator">%</span>msg<span class="token operator">%</span>n<span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 定义参数常量 <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 用于说明输出介质，此处说明控制台输出 <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>appender name<span class="token operator">=</span><span class="token string">"consoleAppender"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"ch.qos.logback.core.ConsoleAppender"</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 类似于layout，除了将时间转化为数组，还会将转换后的数组输出到相应的文件中 <span class="token operator">--</span><span class="token operator">></span>        <span class="token operator">&lt;</span>encoder<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 定义日志的输出格式 <span class="token operator">--</span><span class="token operator">></span>            <span class="token operator">&lt;</span>pattern<span class="token operator">></span>$<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>log<span class="token punctuation">.</span>pattern<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>pattern<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>encoder<span class="token operator">></span>        <span class="token operator">&lt;</span>target<span class="token operator">></span>system<span class="token punctuation">.</span>out<span class="token operator">&lt;</span><span class="token operator">/</span>target<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>appender<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> DEBUG，表示文件随着时间的推移按时间生成日志文件 <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>appender name<span class="token operator">=</span><span class="token string">"debugAppender"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"ch.qos.logback.core.rolling.RollingFileAppender"</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 文件路径 <span class="token operator">--</span><span class="token operator">></span>        <span class="token operator">&lt;</span>file<span class="token operator">></span>$<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>log<span class="token punctuation">.</span>filePath<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">/</span>debug<span class="token punctuation">.</span>log<span class="token operator">&lt;</span><span class="token operator">/</span>file<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>        <span class="token operator">&lt;</span>append<span class="token operator">></span><span class="token boolean">false</span><span class="token operator">&lt;</span><span class="token operator">/</span>append<span class="token operator">></span><span class="token operator">--</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 滚动策略 <span class="token operator">--</span><span class="token operator">></span>        <span class="token operator">&lt;</span>rollingPolicy <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"ch.qos.logback.core.rolling.TimeBasedRollingPolicy"</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 设置文件名称 <span class="token operator">--</span><span class="token operator">></span>            <span class="token operator">&lt;</span>fileNamePattern<span class="token operator">></span>                $<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>log<span class="token punctuation">.</span>filePath<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">/</span>zdebug<span class="token punctuation">.</span>%d<span class="token punctuation">.</span>log            <span class="token operator">&lt;</span><span class="token operator">/</span>fileNamePattern<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 设置最大保存周期 <span class="token operator">--</span><span class="token operator">></span>            <span class="token operator">&lt;</span>MaxHistory<span class="token operator">></span>$<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>log<span class="token punctuation">.</span>maxHistory<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>MaxHistory<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>rollingPolicy<span class="token operator">></span>        <span class="token operator">&lt;</span>encoder<span class="token operator">></span>            <span class="token operator">&lt;</span>pattern<span class="token operator">></span>$<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>log<span class="token punctuation">.</span>pattern<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>pattern<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>encoder<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 过滤器，过滤掉不是指定日志水平的日志 <span class="token operator">--</span><span class="token operator">></span>        <span class="token operator">&lt;</span>filter <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"ch.qos.logback.classic.filter.LevelFilter"</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 设置日志级别 <span class="token operator">--</span><span class="token operator">></span>            <span class="token operator">&lt;</span>level<span class="token operator">></span>DEBUG<span class="token operator">&lt;</span><span class="token operator">/</span>level<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 如果跟该日志水平相匹配，则接受 <span class="token operator">--</span><span class="token operator">></span>            <span class="token operator">&lt;</span>onMatch<span class="token operator">></span>ACCEPT<span class="token operator">&lt;</span><span class="token operator">/</span>onMatch<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 如果跟该日志水平不匹配，则过滤掉 <span class="token operator">--</span><span class="token operator">></span>            <span class="token operator">&lt;</span>onMismatch<span class="token operator">></span>DENY<span class="token operator">&lt;</span><span class="token operator">/</span>onMismatch<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>filter<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>appender<span class="token operator">></span>    <span class="token operator">&lt;</span>appender name<span class="token operator">=</span><span class="token string">"file"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"ch.qos.logback.core.rolling.RollingFileAppender"</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>定义日志输出的路径<span class="token operator">--</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>这里的scheduler<span class="token punctuation">.</span>manager<span class="token punctuation">.</span>server<span class="token punctuation">.</span>home 没有在上面的配置中设定，所以会使用java启动时配置的值<span class="token operator">--</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>比如通过 java <span class="token operator">-</span>Dscheduler<span class="token punctuation">.</span>manager<span class="token punctuation">.</span>server<span class="token punctuation">.</span>home<span class="token operator">=</span><span class="token operator">/</span>path<span class="token operator">/</span>to XXXX 配置该属性<span class="token operator">--</span><span class="token operator">></span>        <span class="token operator">&lt;</span>file<span class="token operator">></span>$<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>log<span class="token punctuation">.</span>filePath<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">/</span>file<span class="token punctuation">.</span>log<span class="token operator">&lt;</span><span class="token operator">/</span>file<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>        <span class="token operator">&lt;</span>append<span class="token operator">></span><span class="token boolean">false</span><span class="token operator">&lt;</span><span class="token operator">/</span>append<span class="token operator">></span><span class="token operator">--</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>定义日志滚动的策略<span class="token operator">--</span><span class="token operator">></span>        <span class="token operator">&lt;</span>rollingPolicy <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"ch.qos.logback.core.rolling.TimeBasedRollingPolicy"</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>定义文件滚动时的文件名的格式<span class="token operator">--</span><span class="token operator">></span>            <span class="token operator">&lt;</span>fileNamePattern<span class="token operator">></span>$<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>log<span class="token punctuation">.</span>filePath<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">/</span>zfile<span class="token punctuation">.</span>%d<span class="token operator">%</span>i<span class="token punctuation">.</span>log<span class="token operator">&lt;</span><span class="token operator">/</span>fileNamePattern<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span><span class="token number">60</span>天的时间周期，日志量最大20GB<span class="token operator">--</span><span class="token operator">></span>            <span class="token operator">&lt;</span>maxHistory<span class="token operator">></span><span class="token number">60</span><span class="token operator">&lt;</span><span class="token operator">/</span>maxHistory<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 该属性在 <span class="token number">1.1</span><span class="token punctuation">.</span><span class="token number">6</span>版本后 才开始支持<span class="token operator">--</span><span class="token operator">></span>            <span class="token operator">&lt;</span>totalSizeCap<span class="token operator">></span>20GB<span class="token operator">&lt;</span><span class="token operator">/</span>totalSizeCap<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>rollingPolicy<span class="token operator">></span>        <span class="token operator">&lt;</span>triggeringPolicy <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy"</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>每个日志文件最大100MB<span class="token operator">--</span><span class="token operator">></span>            <span class="token operator">&lt;</span>maxFileSize<span class="token operator">></span>1KB<span class="token operator">&lt;</span><span class="token operator">/</span>maxFileSize<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>triggeringPolicy<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>定义输出格式<span class="token operator">--</span><span class="token operator">></span>        <span class="token operator">&lt;</span>encoder<span class="token operator">></span>            <span class="token operator">&lt;</span>pattern<span class="token operator">></span><span class="token operator">%</span>d <span class="token punctuation">[</span><span class="token operator">%</span>thread<span class="token punctuation">]</span> <span class="token operator">%</span><span class="token operator">-</span>5level <span class="token operator">%</span>logger <span class="token punctuation">[</span><span class="token operator">%</span>file <span class="token operator">:</span> <span class="token operator">%</span>line<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token operator">%</span>msg<span class="token operator">%</span>n<span class="token operator">&lt;</span><span class="token operator">/</span>pattern<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>encoder<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>appender<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 用于存放日志对象，同时指定关联的<span class="token keyword">package</span>位置 <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> name指定关联的<span class="token keyword">package</span> <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> level表明指记录哪个日志级别以上的日志 <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> appender<span class="token operator">-</span>ref指定logger向哪个文件输出日志信息 <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> additivity为<span class="token boolean">true</span>时，logger会把根logger的日志输出地址加入进来，但logger水平不依赖于根logger <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>logger name<span class="token operator">=</span><span class="token string">"com.inspur.interfaces.task"</span> level<span class="token operator">=</span><span class="token string">"$&amp;#123;log.level&amp;#125;"</span> additivity<span class="token operator">=</span><span class="token string">"true"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>appender<span class="token operator">-</span>ref ref<span class="token operator">=</span><span class="token string">"debugAppender"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>logger<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 特殊的logger，根logger <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>root lever<span class="token operator">=</span><span class="token string">"info"</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 指定默认的日志输出 <span class="token operator">--</span><span class="token operator">></span>        <span class="token operator">&lt;</span>appender<span class="token operator">-</span>ref ref<span class="token operator">=</span><span class="token string">"consoleAppender"</span> <span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span>appender<span class="token operator">-</span>ref ref<span class="token operator">=</span><span class="token string">"file"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>root<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>configuration<span class="token operator">></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>右键菜单</title>
      <link href="/2024/07/03/you-jian-cai-dan/"/>
      <url>/2024/07/03/you-jian-cai-dan/</url>
      
        <content type="html"><![CDATA[<h2 id="右键菜单"><a href="#右键菜单" class="headerlink" title="右键菜单"></a>右键菜单</h2><p>[TOC]</p><h3 id="创建右键cmd"><a href="#创建右键cmd" class="headerlink" title="创建右键cmd"></a>创建右键cmd</h3><pre class=" language-java"><code class="language-java">创建一个cmd<span class="token punctuation">.</span>reg 输入以下内容Windows Registry Editor Version <span class="token number">5.00</span><span class="token punctuation">[</span>HKEY_LOCAL_MACHINE\SOFTWARE\Classes\Directory\background\shell\cmd_here<span class="token punctuation">]</span>@<span class="token operator">=</span><span class="token string">"打开命令行"</span><span class="token punctuation">[</span>HKEY_LOCAL_MACHINE\SOFTWARE\Classes\Directory\background\shell\cmd_here\command<span class="token punctuation">]</span>@<span class="token operator">=</span><span class="token string">"\"C:\\Windows\\System32\\cmd.exe\""</span><span class="token punctuation">[</span>HKEY_LOCAL_MACHINE\SOFTWARE\Classes\Folder\shell\cmdPrompt<span class="token punctuation">]</span>@<span class="token operator">=</span><span class="token string">"打开命令行"</span><span class="token punctuation">[</span>HKEY_LOCAL_MACHINE\SOFTWARE\Classes\Folder\shell\cmdPrompt\command<span class="token punctuation">]</span>@<span class="token operator">=</span><span class="token string">"\"C:\\Windows\\System32\\cmd.exe\" \"cd %1\""</span><span class="token punctuation">[</span>HKEY_LOCAL_MACHINE\SOFTWARE\Classes\Directory\shell\cmd_here<span class="token punctuation">]</span>@<span class="token operator">=</span><span class="token string">"打开命令行"</span><span class="token punctuation">[</span>HKEY_LOCAL_MACHINE\SOFTWARE\Classes\Directory\shell\cmd_here\command<span class="token punctuation">]</span>@<span class="token operator">=</span><span class="token string">"\"C:\\Windows\\System32\\cmd.exe\""</span></code></pre><h4 id="设置图表-icon"><a href="#设置图表-icon" class="headerlink" title="设置图表 icon"></a>设置图表 icon</h4><p>在 cmd_here 下创建 字符串值    icon   值:</p><p>可以设置为   C:\Windows\System32\cmd.exe</p><p>也可以直接设置一个图片 test.icon</p><h3 id="设置-winr快捷命令"><a href="#设置-winr快捷命令" class="headerlink" title="设置 winr快捷命令"></a>设置 winr快捷命令</h3><h4 id="设置vbs脚本"><a href="#设置vbs脚本" class="headerlink" title="设置vbs脚本"></a>设置vbs脚本</h4><pre class=" language-java"><code class="language-java">新建一个 inkpath<span class="token punctuation">.</span>vbs脚本' 脚本说明 https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>blog<span class="token punctuation">.</span>csdn<span class="token punctuation">.</span>net<span class="token operator">/</span>milaoshu1020<span class="token operator">/</span>article<span class="token operator">/</span>details<span class="token operator">/</span><span class="token number">80711574</span>' 脚本版本 v1<span class="token number">.1</span>' installpath是本脚本要安装到的路径<span class="token punctuation">.</span>' d<span class="token operator">:</span>\L是脚本所在的路径<span class="token punctuation">,</span>也是保存快捷方式的目录<span class="token punctuation">.</span>' <span class="token punctuation">[</span>更新历史<span class="token punctuation">]</span>' <span class="token number">2019.06</span><span class="token punctuation">.</span><span class="token number">03</span> v1<span class="token number">.2</span> 增加了安装时自动提权的代码<span class="token punctuation">.</span>' <span class="token number">2018.12</span><span class="token punctuation">.</span><span class="token number">29</span> v1<span class="token number">.1</span> 新增加了对系统变量PATHEXT的注册<span class="token punctuation">,</span>效果是自定义命令可以在命令行中使用<span class="token punctuation">(</span>不用加扩展名<span class="token string">".LNK"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>' <span class="token number">2018.06</span><span class="token punctuation">.</span><span class="token number">18</span> v1<span class="token number">.0</span> 初始版本<span class="token punctuation">,</span>实现了基本功能<span class="token punctuation">.</span>installpath <span class="token operator">=</span> <span class="token string">"E:\worksoft\inkpath\Win+R快捷命令.vbs"</span>set fso <span class="token operator">=</span> <span class="token function">createobject</span><span class="token punctuation">(</span><span class="token string">"scripting.filesystemobject"</span><span class="token punctuation">)</span>set shell <span class="token operator">=</span> <span class="token function">createobject</span><span class="token punctuation">(</span><span class="token string">"wscript.shell"</span><span class="token punctuation">)</span>installdir <span class="token operator">=</span> fso<span class="token punctuation">.</span><span class="token function">getparentfoldername</span><span class="token punctuation">(</span>installpath<span class="token punctuation">)</span>installbase <span class="token operator">=</span> fso<span class="token punctuation">.</span><span class="token function">getbasename</span><span class="token punctuation">(</span>installpath<span class="token punctuation">)</span>If wscript<span class="token punctuation">.</span>arguments<span class="token punctuation">.</span>count <span class="token operator">=</span> <span class="token number">0</span> Then    Set sh <span class="token operator">=</span> <span class="token function">createobject</span><span class="token punctuation">(</span><span class="token string">"shell.application"</span><span class="token punctuation">)</span>    sh<span class="token punctuation">.</span>shellexecute wscript<span class="token punctuation">.</span>fullname<span class="token punctuation">,</span><span class="token string">""</span><span class="token string">""</span> <span class="token operator">&amp;</span> wscript<span class="token punctuation">.</span>scriptfullname <span class="token operator">&amp;</span> <span class="token string">""</span><span class="token string">" -install"</span><span class="token punctuation">,</span><span class="token punctuation">,</span><span class="token string">"runas"</span>Else    If wscript<span class="token punctuation">.</span><span class="token function">arguments</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"-install"</span> Then        Select Case <span class="token function">msgbox</span><span class="token punctuation">(</span><span class="token string">"是否安装'"</span> <span class="token operator">&amp;</span> installbase <span class="token operator">&amp;</span> <span class="token string">"'脚本?"</span><span class="token punctuation">,</span>vbokcancel<span class="token punctuation">)</span>        Case vbcancel            wscript<span class="token punctuation">.</span>quit        End select        copyscriptfile        addinstdirtosystempath        createinstdirlnk        createsendtolnk        msgbox <span class="token string">"'"</span> <span class="token operator">&amp;</span> installpath <span class="token operator">&amp;</span> <span class="token string">"'安装完成,你现在可以:"</span> <span class="token operator">&amp;</span> vbcrlf <span class="token operator">&amp;</span> _            <span class="token string">"使用右键菜单中的'发送到'创建自定义命令."</span> <span class="token operator">&amp;</span> vbcrlf <span class="token operator">&amp;</span> _            <span class="token string">"Win+R,输入'"</span> <span class="token operator">&amp;</span> fso<span class="token punctuation">.</span><span class="token function">getfolder</span><span class="token punctuation">(</span>installdir<span class="token punctuation">)</span><span class="token punctuation">.</span>name <span class="token operator">&amp;</span> <span class="token string">"'以打开命令(快捷方式)列表目录."</span> <span class="token operator">&amp;</span> vbcrlf <span class="token operator">&amp;</span> _            <span class="token string">"Win+R,输入'命令(快捷方式名称)'以打开相应的程序或者目录."</span>    Else        prompttoaddlnk    End IfEnd IfSub <span class="token function">PromptToAddLnk</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    For i <span class="token operator">=</span> <span class="token number">0</span> To wscript<span class="token punctuation">.</span>arguments<span class="token punctuation">.</span>count <span class="token operator">-</span> <span class="token number">1</span>        targetpath <span class="token operator">=</span> wscript<span class="token punctuation">.</span><span class="token function">arguments</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>        lnkname <span class="token operator">=</span> fso<span class="token punctuation">.</span><span class="token function">getbasename</span><span class="token punctuation">(</span>targetpath<span class="token punctuation">)</span>        <span class="token keyword">do</span>            lnkname <span class="token operator">=</span> <span class="token function">inputbox</span><span class="token punctuation">(</span><span class="token string">"请输入'"</span> <span class="token operator">&amp;</span> fso<span class="token punctuation">.</span><span class="token function">getfilename</span><span class="token punctuation">(</span>targetpath<span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token string">"'的快捷方式名称(用于运行命令):"</span><span class="token punctuation">,</span><span class="token punctuation">,</span>lnkname<span class="token punctuation">)</span>            lnkpath <span class="token operator">=</span> fso<span class="token punctuation">.</span><span class="token function">buildpath</span><span class="token punctuation">(</span>installdir<span class="token punctuation">,</span>lnkname <span class="token operator">&amp;</span> <span class="token string">".lnk"</span><span class="token punctuation">)</span>            If Not fso<span class="token punctuation">.</span><span class="token function">fileexists</span><span class="token punctuation">(</span>lnkpath<span class="token punctuation">)</span> Or lnkname <span class="token operator">=</span> <span class="token string">""</span> Then                Exit Do            End If            Select Case <span class="token function">msgbox</span><span class="token punctuation">(</span><span class="token string">"'"</span> <span class="token operator">&amp;</span> lnkpath <span class="token operator">&amp;</span> <span class="token string">"'文件已存在,是否覆盖?"</span><span class="token punctuation">,</span>vbexclamation Or vbyesnocancel<span class="token punctuation">)</span>            Case vbyes                Exit Do            Case vbcancel                lnkname <span class="token operator">=</span> <span class="token string">""</span>                Exit Do            End Select        Loop While True        If lnkname <span class="token operator">&lt;</span><span class="token operator">></span> <span class="token string">""</span> Then            Set shortcut <span class="token operator">=</span> shell<span class="token punctuation">.</span><span class="token function">createshortcut</span><span class="token punctuation">(</span>lnkpath<span class="token punctuation">)</span>            shortcut<span class="token punctuation">.</span>targetpath <span class="token operator">=</span> targetpath            shortcut<span class="token punctuation">.</span>save            msgbox <span class="token string">"'"</span> <span class="token operator">&amp;</span> lnkpath <span class="token operator">&amp;</span> <span class="token string">"'创建成功!"</span>        End If    NextEnd SubSub <span class="token function">CopyScriptFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    If <span class="token function">LCase</span><span class="token punctuation">(</span>installpath<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">LCase</span><span class="token punctuation">(</span>wscript<span class="token punctuation">.</span>scriptfullname<span class="token punctuation">)</span> Then        Exit Sub    End If    If Not fso<span class="token punctuation">.</span><span class="token function">folderexists</span><span class="token punctuation">(</span>installdir<span class="token punctuation">)</span> Then        fso<span class="token punctuation">.</span><span class="token function">createfolder</span><span class="token punctuation">(</span>installdir<span class="token punctuation">)</span>    End If    fso<span class="token punctuation">.</span>copyfile wscript<span class="token punctuation">.</span>scriptfullname<span class="token punctuation">,</span>installpath<span class="token punctuation">,</span><span class="token boolean">true</span>End SubSub <span class="token function">AddInstDirToSystemPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    pathname <span class="token operator">=</span> installdir <span class="token operator">&amp;</span> <span class="token string">";"</span>    Set sysenv <span class="token operator">=</span> shell<span class="token punctuation">.</span><span class="token function">environment</span><span class="token punctuation">(</span><span class="token string">"System"</span><span class="token punctuation">)</span>    If <span class="token function">InStr</span><span class="token punctuation">(</span><span class="token function">LCase</span><span class="token punctuation">(</span><span class="token function">sysenv</span><span class="token punctuation">(</span><span class="token string">"PATH"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">LCase</span><span class="token punctuation">(</span>pathname<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span> Then        <span class="token function">sysenv</span><span class="token punctuation">(</span><span class="token string">"PATH"</span><span class="token punctuation">)</span> <span class="token operator">=</span> pathname <span class="token operator">&amp;</span> <span class="token function">sysenv</span><span class="token punctuation">(</span><span class="token string">"PATH"</span><span class="token punctuation">)</span>    End If    extname <span class="token operator">=</span> <span class="token string">";.LNK"</span>    If <span class="token function">InStr</span><span class="token punctuation">(</span><span class="token function">LCase</span><span class="token punctuation">(</span><span class="token function">sysenv</span><span class="token punctuation">(</span><span class="token string">"PATHEXT"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">LCase</span><span class="token punctuation">(</span>extname<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span> Then        <span class="token function">sysenv</span><span class="token punctuation">(</span><span class="token string">"PATHEXT"</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">sysenv</span><span class="token punctuation">(</span><span class="token string">"PATHEXT"</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> extname    End IfEnd SubSub <span class="token function">CreateSendToLnk</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    sendtodir <span class="token operator">=</span> shell<span class="token punctuation">.</span><span class="token function">specialfolders</span><span class="token punctuation">(</span><span class="token string">"SendTo"</span><span class="token punctuation">)</span>    lnkpath <span class="token operator">=</span> fso<span class="token punctuation">.</span><span class="token function">buildpath</span><span class="token punctuation">(</span>sendtodir<span class="token punctuation">,</span>installbase <span class="token operator">&amp;</span> <span class="token string">".lnk"</span><span class="token punctuation">)</span>    Set shortcut <span class="token operator">=</span> shell<span class="token punctuation">.</span><span class="token function">createshortcut</span><span class="token punctuation">(</span>lnkpath<span class="token punctuation">)</span>    shortcut<span class="token punctuation">.</span>targetpath <span class="token operator">=</span> installpath    shortcut<span class="token punctuation">.</span>saveEnd SubSub <span class="token function">CreateInstDirLnk</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    lnkpath <span class="token operator">=</span> fso<span class="token punctuation">.</span><span class="token function">buildpath</span><span class="token punctuation">(</span>installdir<span class="token punctuation">,</span>fso<span class="token punctuation">.</span><span class="token function">getfolder</span><span class="token punctuation">(</span>installdir<span class="token punctuation">)</span><span class="token punctuation">.</span>name <span class="token operator">&amp;</span> <span class="token string">".lnk"</span><span class="token punctuation">)</span>    If Not fso<span class="token punctuation">.</span><span class="token function">fileexists</span><span class="token punctuation">(</span>lnkpath<span class="token punctuation">)</span> Then        Set shortcut <span class="token operator">=</span> shell<span class="token punctuation">.</span><span class="token function">createshortcut</span><span class="token punctuation">(</span>lnkpath<span class="token punctuation">)</span>        shortcut<span class="token punctuation">.</span>targetpath <span class="token operator">=</span> installdir        shortcut<span class="token punctuation">.</span>save    End IfEnd Sub</code></pre><h4 id="使用ScriptCryptor-转换为-winr-exe"><a href="#使用ScriptCryptor-转换为-winr-exe" class="headerlink" title="使用ScriptCryptor 转换为 winr.exe"></a>使用ScriptCryptor 转换为 winr.exe</h4><h4 id="设置右键菜单"><a href="#设置右键菜单" class="headerlink" title="设置右键菜单"></a>设置右键菜单</h4><pre class=" language-java"><code class="language-java">在注册表 folder 下创建右键  command 为 E<span class="token operator">:</span>\worksoft\inkpath\winr<span class="token punctuation">.</span>exe <span class="token string">"%V"</span></code></pre><h2 id="注册表说明"><a href="#注册表说明" class="headerlink" title="注册表说明"></a>注册表说明</h2><pre class=" language-java"><code class="language-java">计算机\HKEY_LOCAL_MACHINE\SOFTWARE\Classes\Folder\shell  下创建  对文件夹生效</code></pre><pre class=" language-java"><code class="language-java">计算机\HKEY_CLASSES_ROOT\<span class="token operator">*</span>\shell 下  对 文件<span class="token punctuation">(</span><span class="token punctuation">.</span>txt   <span class="token punctuation">.</span>docx<span class="token punctuation">)</span>生效<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h3 id="folder-和-directory-区别"><a href="#folder-和-directory-区别" class="headerlink" title="folder 和 directory 区别"></a>folder 和 directory 区别</h3><pre class=" language-java"><code class="language-java">在 Windows 系统中，我们经常会见到「目录」和「文件夹」两个名词，但很多人会这两个概念混用，甚至搞不清楚它们的区别，包括写这篇博文的我，之前也是一样。同样表示「文件夹」的概念，为什么会有两个说法？事实上，这两个词不仅仅是在中文中，在英文原文中，也是有两个不同的词汇，Directory 和 Folder。通常，Directory 被翻译成「目录」，而 Folder 被翻译成「文件夹」。但实际的情况是，很多情况下，这两个的翻译都比较混乱，Directory 也经常被翻译为「文件夹」。那么微软使用 Directory 和 Folder 这两个名词到底什么不同的意义和差异呢？这个问题我多年也没搞清楚，直到最近又在网上搜索资料，并自己进行一些测试后，才发现他们的细微差别。首先，作为一个 Windows 开发人员，注册表、文件关联等都应该是了解的。那么大家应该都知道，在 Windows 的注册表编辑器中的 HKEY_CLASSES_ROOT 节点下面，有 Directory 和 Folder 两个子键，类似其他的 ProgId 子键，支持在其 shell 子键添加自定义的动作和命令。有一天我突发奇想，如果我分别在这两个位置添加一个动作项，系统该如何显示它们？于是我分别在不同的位置单独添加注册表项，然后观察右键菜单，发现了其中的秘密：仅在 HKEY_CLASSES_ROOTDirectoryshell 下面随便添加一个节点，如 action，我分别在「计算机」、「回收站」、「计算机」中的任意驱动器、普通文件夹上点击右键，只有普通的文件夹右键菜单中出现了 action 这一菜单项。仅在 HKEY_CLASSES_ROOTFoldershell 下面随便添加一个节点，如 action，我分别在「计算机」、「回收站」、「计算机」中的任意驱动器、普通文件夹上点击右键，所有这些项目的右键菜单中均出现了 action 这一菜单项。仅在 HKEY_CLASSES_ROOTDriveshell 下面随便添加一个节点，如 action，我分别在「计算机」、「回收站」、「计算机」中的任意驱动器、普通文件夹上点击右键，只有驱动器盘符右键菜单中出现了 action 这一菜单项。如此看来，Folder 的范围其实是很大的，它包括了系统中所有可以双击打开并查看其内容的「文件夹」项目，包括「计算机」、「回收站」、「控制面板」等这些虚拟文件夹，以及「计算机」中的所有磁盘驱动器，以及其中的任何文件夹 <span class="token punctuation">(</span>Directory<span class="token punctuation">)</span>。而 Directory 的概念则小的很多，它必须是存在于物理磁盘上的一个「文件夹」项目，而「计算机」中的所有磁盘驱动器，如「本地磁盘 <span class="token punctuation">(</span>C<span class="token operator">:</span><span class="token punctuation">)</span>」则不认为是 Directory。总结：如果是开发外壳扩展 dll，最好根据需要写入到正确的子键下面，不要在 Directory 和 Folder 等子键下乱写一通。虽然有的外壳扩展不支持虚拟文件夹，写在 Directory 下系统也并不会加载，但还是希望各位开发人员能够正确遵守规范。</code></pre><h3 id="完整示例"><a href="#完整示例" class="headerlink" title="完整示例"></a>完整示例</h3><pre class=" language-java"><code class="language-java"><span class="token punctuation">[</span>HKEY_LOCAL_MACHINE\SOFTWARE\Classes\Folder\shell\添加到快捷方式<span class="token punctuation">]</span><span class="token string">"icon"</span><span class="token operator">=</span><span class="token string">"E:\\back\\Pictures\\icon\\damotouicon (6).ico"</span><span class="token punctuation">[</span>HKEY_LOCAL_MACHINE\SOFTWARE\Classes\Folder\shell\添加到快捷方式\command<span class="token punctuation">]</span>@<span class="token operator">=</span><span class="token string">"E:\\worksoft\\inkpath\\winr.exe \"%V\""</span><span class="token punctuation">[</span>HKEY_LOCAL_MACHINE\SOFTWARE\Classes\Folder\shell\open_cmd<span class="token punctuation">]</span><span class="token string">"icon"</span><span class="token operator">=</span><span class="token string">"C:\\Windows\\System32\\cmd.exe"</span><span class="token punctuation">[</span>HKEY_LOCAL_MACHINE\SOFTWARE\Classes\Folder\shell\open_cmd\command<span class="token punctuation">]</span>@<span class="token operator">=</span><span class="token string">"\"C:\\Windows\\System32\\cmd.exe\" \"cd %1\""</span><span class="token punctuation">[</span>HKEY_LOCAL_MACHINE\SOFTWARE\Classes\Directory\background\shell\open_cmd<span class="token punctuation">]</span><span class="token string">"icon"</span><span class="token operator">=</span><span class="token string">"C:\\Windows\\System32\\cmd.exe"</span><span class="token punctuation">[</span>HKEY_LOCAL_MACHINE\SOFTWARE\Classes\Directory\background\shell\open_cmd\command<span class="token punctuation">]</span>@<span class="token operator">=</span><span class="token string">"\"C:\\Windows\\System32\\cmd.exe\""</span><span class="token punctuation">[</span>HKEY_CLASSES_ROOT\<span class="token operator">*</span>\shell\添加到快捷命令<span class="token punctuation">]</span><span class="token string">"icon"</span><span class="token operator">=</span><span class="token string">"E:\\back\\Pictures\\icon\\damotouicon (6).ico"</span><span class="token punctuation">[</span>HKEY_CLASSES_ROOT\<span class="token operator">*</span>\shell\添加到快捷命令\command<span class="token punctuation">]</span>@<span class="token operator">=</span><span class="token string">"E:\\worksoft\\inkpath\\winr.exe \"%V\""</span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello</title>
      <link href="/2024/07/03/hello-world/"/>
      <url>/2024/07/03/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo博客搭建</title>
      <link href="/2024/07/03/2024-07-03hexo/"/>
      <url>/2024/07/03/2024-07-03hexo/</url>
      
        <content type="html"><![CDATA[<pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.blinkfox<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>fenix-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.0.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><p><img src="/images/2024-07-03hexo/b9ed9f4872c8da34cbd81c0ffef10bd.png" alt="b9ed9f4872c8da34cbd81c0ffef10bd"></p><h2 id="1-hexo-安装"><a href="#1-hexo-安装" class="headerlink" title="1.hexo 安装"></a>1.hexo 安装</h2><p>安装前需要准备好npm环境</p><pre class=" language-java"><code class="language-java">安装hexo客户端npm i hexo<span class="token operator">-</span>cli <span class="token operator">-</span>g  #在空白文件夹下穿件hexo项目hexo init项目运行hexo s <span class="token punctuation">[</span><span class="token operator">-</span>p <span class="token number">5000</span><span class="token punctuation">]</span></code></pre><h2 id="2-主题安装"><a href="#2-主题安装" class="headerlink" title="2.主题安装"></a>2.主题安装</h2><p>​选择主题时浪费了很多时间,   主要研究了<a href="https://butterfly.js.org/">butterfly</a>主题,我需要的是一个简单配置就能使用的博客,不需要在页面配置上浪费大量精力. 或许以后熟练使用hexo了 可以考虑研究下.</p><p>​     最后选定了 <a href="https://blinkfox.github.io/2018/09/28/qian-duan/hexo-bo-ke-zhu-ti-zhi-hexo-theme-matery-de-jie-shao/">matery</a> 主题, 安装时会有些小问题</p><blockquote><p>主题安装</p><pre><code>git clone https://github.com/blinkfox/hexo-theme-matery themes/matery</code></pre><p>我安装上述方式安装,最后部署githubpage时 部署失败.</p><pre><code>git clone https://github.com/blinkfox/hexo-theme-matery.git</code></pre><p>最后采用了在github 下载压缩包 然后 复制解压到 themes 文件夹下的方式安装主题</p><p><img src="/2024/07/03/2024-07-03hexo/image-20240703180115686.png" alt="image-20240703180115686"></p></blockquote><blockquote><p>主题设置按照<a href="https://blinkfox.github.io/2018/09/28/qian-duan/hexo-bo-ke-zhu-ti-zhi-hexo-theme-matery-de-jie-shao/">matery</a> 教程中设置, 实现了文章全文搜索,和文章字数统计. </p><p>评论设置一直有问题,未能解决,</p></blockquote><h2 id="3-github-部署"><a href="#3-github-部署" class="headerlink" title="3.github 部署"></a>3.github 部署</h2><h3 id="githuppage准备"><a href="#githuppage准备" class="headerlink" title="githuppage准备"></a>githuppage准备</h3><pre><code>注册githup 账号  创建github仓库 仓库名称必须设置为  你的名字.github.io (liudongsir.github.io)如果是单纯设置博客,仓库名可以随便设置; 例如我一开始使用的hexo仓库部署但是这么做会影响下面的图片部署.</code></pre><p><img src="/2024/07/03/2024-07-03hexo/image-20240703181034779.png" alt="image-20240703181034779"></p><p> <img src="/2024/07/03/2024-07-03hexo/image-20240703181203043.png" alt="image-20240703181203043"></p><h3 id="插件安装"><a href="#插件安装" class="headerlink" title="插件安装"></a>插件安装</h3><blockquote><p>首先需要安装发布的插件， 插件发布项目需要用到 github  ssh连接方式, 提前配置好ssh key</p></blockquote><pre class=" language-yaml"><code class="language-yaml">npm install hexo<span class="token punctuation">-</span>deployer<span class="token punctuation">-</span>git <span class="token punctuation">-</span><span class="token punctuation">-</span>save</code></pre><h3 id="项目配置"><a href="#项目配置" class="headerlink" title="项目配置"></a>项目配置</h3><blockquote><p>hexo 配置文件 _config.yml 设置如下图   </p></blockquote><p> <img src="/2024/07/03/2024-07-03hexo/image-20240703181034779.png" alt="image-20240703181034779"></p><h3 id="项目部署"><a href="#项目部署" class="headerlink" title="项目部署"></a>项目部署</h3><pre class=" language-java"><code class="language-java"># Hexo会根据配置文件渲染出一套静态页面hexo g# 将上一步渲染出的一系列文件上传至至Github Pageshexo d# 也可以直接输入此命令，直接完成渲染和上传hexo g <span class="token operator">-</span>d</code></pre><h2 id="4-图片部署"><a href="#4-图片部署" class="headerlink" title="4.图片部署"></a>4.图片部署</h2><p>图片部署有多种方式, 1 通过图床上传图片到oss服务器(常用),2同步图片到仓库直接访问.</p><p>我采用的方式2</p><p>方式2的参考链接</p><p><a href="https://zhuanlan.zhihu.com/p/405551874">[Hexo博客搭建]第4章 Hexo图片显示问题</a></p><p><a href="https://blog.csdn.net/cnds123321/article/details/109085776">解决Hexo关于图片的问题</a></p><p><a href="https://blog.csdn.net/m0_43401436/article/details/107191688">hexo博客中插入图片失败——解决思路及个人最终解决办法</a></p><p>一些其他解决思路</p><p><a href="https://yinyoupoet.github.io/2019/09/03/hexo%E5%8D%9A%E5%AE%A2%E4%B8%AD%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/">typora + hexo博客中插入图片</a></p><p><a href="https://rainylog.com/post/hexo-post-image-manage/">Hexo 文章图片管理</a></p><blockquote><p>修改配置文件</p></blockquote><pre><code>_config.yml` 文件中的`post_asset_folder` 选项设为 `true目的 可以生成 md文件的同名文件夹</code></pre><pre><code>编写博客(md)使用 typora 在偏好设置中如图设置:</code></pre><p><img src="/2024/07/03/2024-07-03hexo/image-20240703180647089.png" alt="image-20240703180647089"></p><blockquote><p>安装图片处理插件</p></blockquote><pre><code>npm install https://github.com/CodeFalling/hexo-asset-image --save在hexo g  时可以复制图片到生成的静态文件(html) 同级目录中,并且图片路径也对应处理.</code></pre><p><img src="/2024/07/03/2024-07-03hexo/image-20240703180835748.png" alt="image-20240703180835748"></p><h2 id="5-参考链接"><a href="#5-参考链接" class="headerlink" title="5.参考链接"></a>5.参考链接</h2><p><a href="https://blog.csdn.net/victoryxa/article/details/103733655">hexo+github搭建博客(超级详细版，精细入微)</a></p><p><a href="https://blog.csdn.net/qq_58608526/article/details/124652412">Hexo+Github博客搭建教程</a></p><h2 id="6-后记"><a href="#6-后记" class="headerlink" title="6.后记"></a>6.后记</h2><p>​博客还有很多内容可以设置</p><ul><li>本地搜索</li><li>代码格式化</li><li>github  action 自动化部署</li></ul><blockquote><p>安装matery 主题用到的其他插件</p><pre class=" language-yaml"><code class="language-yaml">npm i  hexo<span class="token punctuation">-</span>prism<span class="token punctuation">-</span>plugin <span class="token punctuation">-</span>Snpm i hexo<span class="token punctuation">-</span>generator<span class="token punctuation">-</span>search <span class="token punctuation">-</span><span class="token punctuation">-</span>savenpm i hexo<span class="token punctuation">-</span>permalink<span class="token punctuation">-</span>pinyin <span class="token punctuation">-</span><span class="token punctuation">-</span>savenpm i <span class="token punctuation">-</span><span class="token punctuation">-</span>save hexo<span class="token punctuation">-</span>wordcount</code></pre></blockquote><p><img src="/2024/07/03/2024-07-03hexo/back-title.jpg" alt="back-title"></p>]]></content>
      
      
      <categories>
          
          <category> hexo博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo博客搭建</title>
      <link href="/2024/07/03/2024-07-03hexo-bo-ke/"/>
      <url>/2024/07/03/2024-07-03hexo-bo-ke/</url>
      
        <content type="html"><![CDATA[<pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.blinkfox<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>fenix-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.0.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><p><img src="/images/2024-07-03hexo/b9ed9f4872c8da34cbd81c0ffef10bd.png" alt="b9ed9f4872c8da34cbd81c0ffef10bd"></p><h2 id="1-hexo-安装"><a href="#1-hexo-安装" class="headerlink" title="1.hexo 安装"></a>1.hexo 安装</h2><p>安装前需要准备好npm环境</p><pre class=" language-java"><code class="language-java">安装hexo客户端npm i hexo<span class="token operator">-</span>cli <span class="token operator">-</span>g  #在空白文件夹下穿件hexo项目hexo init项目运行hexo s <span class="token punctuation">[</span><span class="token operator">-</span>p <span class="token number">5000</span><span class="token punctuation">]</span></code></pre><h2 id="2-主题安装"><a href="#2-主题安装" class="headerlink" title="2.主题安装"></a>2.主题安装</h2><p>​选择主题时浪费了很多时间,   主要研究了<a href="https://butterfly.js.org/">butterfly</a>主题,我需要的是一个简单配置就能使用的博客,不需要在页面配置上浪费大量精力. 或许以后熟练使用hexo了 可以考虑研究下.</p><p>​     最后选定了 <a href="https://blinkfox.github.io/2018/09/28/qian-duan/hexo-bo-ke-zhu-ti-zhi-hexo-theme-matery-de-jie-shao/">matery</a> 主题, 安装时会有些小问题</p><blockquote><p>主题安装</p><pre><code>git clone https://github.com/blinkfox/hexo-theme-matery themes/matery</code></pre><p>我安装上述方式安装,最后部署githubpage时 部署失败.</p><pre><code>git clone https://github.com/blinkfox/hexo-theme-matery.git</code></pre><p>最后采用了在github 下载压缩包 然后 复制解压到 themes 文件夹下的方式安装主题</p><p><img src="/2024/07/03/2024-07-03hexo-bo-ke/image-20240703180115686.png" alt="image-20240703180115686"></p></blockquote><blockquote><p>主题设置按照<a href="https://blinkfox.github.io/2018/09/28/qian-duan/hexo-bo-ke-zhu-ti-zhi-hexo-theme-matery-de-jie-shao/">matery</a> 教程中设置, 实现了文章全文搜索,和文章字数统计. </p><p>评论设置一直有问题,未能解决,</p></blockquote><h2 id="3-github-部署"><a href="#3-github-部署" class="headerlink" title="3.github 部署"></a>3.github 部署</h2><h3 id="githuppage准备"><a href="#githuppage准备" class="headerlink" title="githuppage准备"></a>githuppage准备</h3><pre><code>注册githup 账号  创建github仓库 仓库名称必须设置为  你的名字.github.io (liudongsir.github.io)如果是单纯设置博客,仓库名可以随便设置; 例如我一开始使用的hexo仓库部署但是这么做会影响下面的图片部署.</code></pre><p><img src="/2024/07/03/2024-07-03hexo-bo-ke/image-20240703181034779.png" alt="image-20240703181034779"></p><p> <img src="/2024/07/03/2024-07-03hexo-bo-ke/image-20240703181203043.png" alt="image-20240703181203043"></p><h3 id="插件安装"><a href="#插件安装" class="headerlink" title="插件安装"></a>插件安装</h3><blockquote><p>首先需要安装发布的插件， 插件发布项目需要用到 github  ssh连接方式, 提前配置好ssh key</p></blockquote><pre class=" language-yaml"><code class="language-yaml">npm install hexo<span class="token punctuation">-</span>deployer<span class="token punctuation">-</span>git <span class="token punctuation">-</span><span class="token punctuation">-</span>save</code></pre><h3 id="项目配置"><a href="#项目配置" class="headerlink" title="项目配置"></a>项目配置</h3><blockquote><p>hexo 配置文件 _config.yml 设置如下图   </p></blockquote><p> <img src="/2024/07/03/2024-07-03hexo-bo-ke/image-20240703181034779.png" alt="image-20240703181034779"></p><h3 id="项目部署"><a href="#项目部署" class="headerlink" title="项目部署"></a>项目部署</h3><pre class=" language-java"><code class="language-java"># Hexo会根据配置文件渲染出一套静态页面hexo g# 将上一步渲染出的一系列文件上传至至Github Pageshexo d# 也可以直接输入此命令，直接完成渲染和上传hexo g <span class="token operator">-</span>d</code></pre><h2 id="4-图片部署"><a href="#4-图片部署" class="headerlink" title="4.图片部署"></a>4.图片部署</h2><p>图片部署有多种方式, 1 通过图床上传图片到oss服务器(常用),2同步图片到仓库直接访问.</p><p>我采用的方式2</p><p>方式2的参考链接</p><p><a href="https://zhuanlan.zhihu.com/p/405551874">[Hexo博客搭建]第4章 Hexo图片显示问题</a></p><p><a href="https://blog.csdn.net/cnds123321/article/details/109085776">解决Hexo关于图片的问题</a></p><p><a href="https://blog.csdn.net/m0_43401436/article/details/107191688">hexo博客中插入图片失败——解决思路及个人最终解决办法</a></p><p>一些其他解决思路</p><p><a href="https://yinyoupoet.github.io/2019/09/03/hexo%E5%8D%9A%E5%AE%A2%E4%B8%AD%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/">typora + hexo博客中插入图片</a></p><p><a href="https://rainylog.com/post/hexo-post-image-manage/">Hexo 文章图片管理</a></p><blockquote><p>修改配置文件</p></blockquote><pre><code>_config.yml` 文件中的`post_asset_folder` 选项设为 `true目的 可以生成 md文件的同名文件夹</code></pre><pre><code>编写博客(md)使用 typora 在偏好设置中如图设置:</code></pre><p><img src="/2024/07/03/2024-07-03hexo-bo-ke/image-20240703180647089.png" alt="image-20240703180647089"></p><blockquote><p>安装图片处理插件</p></blockquote><pre><code>npm install https://github.com/CodeFalling/hexo-asset-image --save在hexo g  时可以复制图片到生成的静态文件(html) 同级目录中,并且图片路径也对应处理.</code></pre><p><img src="/2024/07/03/2024-07-03hexo-bo-ke/image-20240703180835748.png" alt="image-20240703180835748"></p><h2 id="5-参考链接"><a href="#5-参考链接" class="headerlink" title="5.参考链接"></a>5.参考链接</h2><p><a href="https://blog.csdn.net/victoryxa/article/details/103733655">hexo+github搭建博客(超级详细版，精细入微)</a></p><p><a href="https://blog.csdn.net/qq_58608526/article/details/124652412">Hexo+Github博客搭建教程</a></p><h2 id="6-后记"><a href="#6-后记" class="headerlink" title="6.后记"></a>6.后记</h2><p>​博客还有很多内容可以设置</p><ul><li>本地搜索</li><li>代码格式化</li><li>github  action 自动化部署</li></ul><blockquote><p>安装matery 主题用到的其他插件</p><pre class=" language-yaml"><code class="language-yaml">npm i  hexo<span class="token punctuation">-</span>prism<span class="token punctuation">-</span>plugin <span class="token punctuation">-</span>Snpm i hexo<span class="token punctuation">-</span>generator<span class="token punctuation">-</span>search <span class="token punctuation">-</span><span class="token punctuation">-</span>savenpm i hexo<span class="token punctuation">-</span>permalink<span class="token punctuation">-</span>pinyin <span class="token punctuation">-</span><span class="token punctuation">-</span>savenpm i <span class="token punctuation">-</span><span class="token punctuation">-</span>save hexo<span class="token punctuation">-</span>wordcount</code></pre></blockquote><p><img src="/2024/07/03/2024-07-03hexo-bo-ke/back-title.jpg" alt="back-title"></p>]]></content>
      
      
      <categories>
          
          <category> hexo博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo博客 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
